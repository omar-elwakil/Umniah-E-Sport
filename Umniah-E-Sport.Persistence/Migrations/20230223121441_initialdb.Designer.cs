// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Umniah_E_Sport.Persistence;

#nullable disable

namespace UmniahESport.Persistence.Migrations
{
    [DbContext(typeof(UmniahContext))]
    [Migration("20230223121441_initialdb")]
    partial class initialdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Arena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryName_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CountryName_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Arenas");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ImageSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.CasualCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CasualCategories");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.CasualGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BannerImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CasualCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("GameLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFreatured")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfClicked")
                        .HasColumnType("int");

                    b.Property<string>("ProvidingBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasualCategoryId");

                    b.ToTable("CasualGames");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.CasualGameImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CasualGameId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CasualGameId");

                    b.ToTable("CasualGameImages");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GameLink")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TermsAndConditionsId")
                        .HasColumnType("int");

                    b.Property<string>("Title_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("TermsAndConditionsId")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Text_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Text_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.NewsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Description_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.NotificationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("MSISDN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("NotificationLogs");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.TermsAndConditions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Content_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreationTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TermsAndConditions");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArenaId")
                        .HasColumnType("int");

                    b.Property<string>("BannerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Description_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DiscordLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<TimeSpan>("DurationTimeSpan")
                        .HasColumnType("time");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Organizer_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Organizer_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PrizeAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionFee")
                        .HasColumnType("int");

                    b.Property<string>("Title_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TournamentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.HasIndex("GameId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TournamentTypeId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.TournamentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Text_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Text_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("TournamentTypes");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsSubscribe")
                        .HasColumnType("bit");

                    b.Property<string>("Msisdn")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscribeTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UnsubscribeTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.UserGames", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserScore")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("UserGames");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.UserTournaments", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.Property<string>("IngameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDailySmsSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHourlySmsSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsJoinSmsSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTheFirst")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("UserId", "TournamentId");

                    b.HasIndex("TournamentId");

                    b.ToTable("UserTournaments");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Description_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title_AR")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("VideoFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Achievement", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.CasualGame", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.CasualCategory", "CasualCategory")
                        .WithMany("CasualGames")
                        .HasForeignKey("CasualCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasualCategory");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.CasualGameImage", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.CasualGame", "CasualGame")
                        .WithMany("CasualGameImages")
                        .HasForeignKey("CasualGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasualGame");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Game", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.TermsAndConditions", "TermsAndConditions")
                        .WithOne("Game")
                        .HasForeignKey("Umniah_E_Sport.Domain.Entities.Game", "TermsAndConditionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TermsAndConditions");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.NewsEntity", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.Game", "Game")
                        .WithMany("News")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Tournament", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.Arena", "Arena")
                        .WithMany("Tournaments")
                        .HasForeignKey("ArenaId");

                    b.HasOne("Umniah_E_Sport.Domain.Entities.Game", "Game")
                        .WithMany("Tournaments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Umniah_E_Sport.Domain.Entities.Location", "Location")
                        .WithMany("Tournaments")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Umniah_E_Sport.Domain.Entities.TournamentType", "TournamentType")
                        .WithMany("Tournaments")
                        .HasForeignKey("TournamentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arena");

                    b.Navigation("Game");

                    b.Navigation("Location");

                    b.Navigation("TournamentType");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.UserGames", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.Game", "Game")
                        .WithMany("UserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Umniah_E_Sport.Domain.Entities.User", "User")
                        .WithMany("UserGames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.UserTournaments", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.Tournament", "Tournament")
                        .WithMany("UserTournaments")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Umniah_E_Sport.Domain.Entities.User", "User")
                        .WithMany("UserTournaments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Video", b =>
                {
                    b.HasOne("Umniah_E_Sport.Domain.Entities.Game", "Game")
                        .WithMany("videos")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Arena", b =>
                {
                    b.Navigation("Tournaments");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.CasualCategory", b =>
                {
                    b.Navigation("CasualGames");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.CasualGame", b =>
                {
                    b.Navigation("CasualGameImages");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Game", b =>
                {
                    b.Navigation("News");

                    b.Navigation("Tournaments");

                    b.Navigation("UserGames");

                    b.Navigation("videos");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Location", b =>
                {
                    b.Navigation("Tournaments");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.TermsAndConditions", b =>
                {
                    b.Navigation("Game")
                        .IsRequired();
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.Tournament", b =>
                {
                    b.Navigation("UserTournaments");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.TournamentType", b =>
                {
                    b.Navigation("Tournaments");
                });

            modelBuilder.Entity("Umniah_E_Sport.Domain.Entities.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("UserGames");

                    b.Navigation("UserTournaments");
                });
#pragma warning restore 612, 618
        }
    }
}
